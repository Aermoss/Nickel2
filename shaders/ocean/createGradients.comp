
#version 460

layout (rgba32f, binding = 0) uniform readonly image2D displacement;
layout (rgba16f, binding = 1) uniform writeonly image2D gradients;

layout (local_size_x = 16, local_size_y = 16) in;

void main() {
    ivec2 loc = ivec2(gl_GlobalInvocationID.xy);
    ivec2 left = (loc - ivec2(1, 0)) & (DISP_MAP_SIZE - 1);
    ivec2 right = (loc + ivec2(1, 0)) & (DISP_MAP_SIZE - 1);
    ivec2 bottom = (loc - ivec2(0, 1)) & (DISP_MAP_SIZE - 1);
    ivec2 top = (loc + ivec2(0, 1)) & (DISP_MAP_SIZE - 1);

    vec3 disp_left = imageLoad(displacement, left).xyz;
    vec3 disp_right = imageLoad(displacement, right).xyz;
    vec3 disp_bottom = imageLoad(displacement, bottom).xyz;
    vec3 disp_top = imageLoad(displacement, top).xyz;

    vec2 gradient = vec2(disp_left.y - disp_right.y, disp_bottom.y - disp_top.y);
    vec2 dDx = (disp_right.xz - disp_left.xz) * INV_TILE_SIZE;
    vec2 dDy = (disp_top.xz - disp_bottom.xz) * INV_TILE_SIZE;
    
    float J = (1.0f + dDx.x) * (1.0f + dDy.y) - dDx.y * dDy.x;
    imageStore(gradients, loc, vec4(gradient, TILE_SIZE_X2, J));
}