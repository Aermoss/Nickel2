
#version 460

#define PI 3.1415926535897932f
#define TWO_PI 6.2831853071795864f

layout (rg32f, binding = 0) uniform readonly image2D readBuff;
layout (rg32f, binding = 1) uniform writeonly image2D writeBuff;

shared vec2 values[DISP_MAP_SIZE];

layout (local_size_x = DISP_MAP_SIZE) in;

void main() {
    const float N = float(DISP_MAP_SIZE);

    int n = int(gl_WorkGroupID.x);
    int m = int(gl_LocalInvocationID.x);

    values[m] = imageLoad(readBuff, ivec2(n, m)).rg;
    barrier();

    vec2 result = vec2(0.0f);

    for (int k = 0; k < DISP_MAP_SIZE; ++k) {
        vec2 coeff = values[k];

        float theta = (m * TWO_PI * float(k)) / N;
        float cosT = cos(theta);
        float sinT = sin(theta);

        result.x += coeff.x * cosT - coeff.y * sinT;
        result.y += coeff.y * cosT + coeff.x * sinT;
    }
    
    imageStore(writeBuff, ivec2(m, n), vec4(result, 0.0f, 1.0f));
}